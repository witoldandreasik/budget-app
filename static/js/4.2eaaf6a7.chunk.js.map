{"version":3,"sources":["data/fetch/budget.fetch.js","data/fetch/common.fetch.js","data/fetch/index.js","utils/index.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.css.js","pages/Budget/components/BudgetCategoryList/ParentCategory.js","pages/Budget/components/BudgetCategoryList/CategoryItem.js","pages/Budget/components/BudgetCategoryList/BudgetCategoryList.js"],"names":["fetchBudget","key","a","id","console","log","fetch","process","response","json","data","fetchBudgetedCategories","addTransaction","budgetId","method","headers","body","JSON","stringify","fetchAllCategories","budget","common","formatCurrency","value","number","Number","Intl","NumberFormat","style","currency","format","formatDate","string","date","Date","DateTimeFormat","Category","styled","div","theme","colors","black","normal","spacing","xs","ParentCategory","gray","CategoryItem","CategoryAmount","span","negative","red","green","name","onClick","categories","transactions","amount","categoryLeftValue","useMemo","budgeted","reduce","acc","category","error","spentParentCategory","filter","transaction","find","categoryId","amountValue","item","spentOnCategory","totalLeft","toFixed","light","BudgetCategoryList","useQuery","API","allCategories","budgetedCategories","dispatch","useContext","BudgetContext","store","setSelectedParentCategoryId","useCallback","type","payload","t","useTranslation","handleClickParentCategoryRef","useRef","budgetedCategoriesByParent","groupBy","parentCategory","handleClearParentCategorySelect","current","handleSelectRestParentCategories","listItems","Object","entries","map","parentName","Trigger","children","budgetedCategory","totalSpent","restToSpent","totalAmount","amountTaken","categoryExpenses","Math","max","notBudgetedTransaction","notBudgetedExpenses","availableForRestCategories","items","clickRef"],"mappings":"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","file":"static/js/4.2eaaf6a7.chunk.js","sourcesContent":["export const fetchBudget = async (key, { id }) => {\r\n  console.log({ id });\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API_URL}/budgets/${id}/?_embed=transactions`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const fetchBudgetedCategories = async (key, { id }) => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API_URL}/budgets/${id}/budgetCategories`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n\r\nexport const addTransaction = async ({ budgetId, data }) => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API_URL}/budgets/${budgetId}/transactions/`,\r\n    {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    }\r\n  );\r\n\r\n  return await response.json();\r\n};\r\n","export const fetchAllCategories = async () => {\r\n  const response = await fetch(\r\n    `${process.env.REACT_APP_API_URL}/categories/?_expand=parentCategory`\r\n  );\r\n  const data = await response.json();\r\n  return data;\r\n};\r\n","import * as budget from \"./budget.fetch\";\r\nimport * as common from \"./common.fetch\";\r\nexport default {\r\n  budget,\r\n  common,\r\n};\r\n","export const formatCurrency = (value) => {\r\n  const number = Number(value);\r\n  return new Intl.NumberFormat(\"pl\", {\r\n    style: \"currency\",\r\n    currency: \"PLN\",\r\n  }).format(number);\r\n};\r\n\r\nexport const formatDate = (string) => {\r\n  const date = new Date(string);\r\n  return new Intl.DateTimeFormat(\"pl\").format(date);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Category = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.colors.black.normal};\r\n  padding: ${({ theme }) => theme.spacing.xs}px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ParentCategory = styled(Category)`\r\n  background-color: ${({ theme }) => theme.colors.gray.normal};\r\n`;\r\n\r\nexport const CategoryItem = styled(Category)`\r\n  background-color: ${({ theme }) => theme.colors.black.normal};\r\n  color: #ffffff;\r\n`;\r\n\r\nexport const CategoryAmount = styled.span`\r\n  font-weight: 700;\r\n  color: ${({ theme, negative }) =>\r\n    negative ? theme.colors.red.normal : theme.colors.green.normal};\r\n`;\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport {\r\n  ParentCategory as Root,\r\n  CategoryAmount,\r\n} from \"./BudgetCategoryList.css\";\r\nimport { formatCurrency } from \"utils\";\r\n\r\nfunction ParentCategory({ name, onClick, categories, transactions, amount }) {\r\n  const categoryLeftValue = useMemo(() => {\r\n    if (!!amount) return null;\r\n    const budgeted = (() => {\r\n      try {\r\n        return categories.reduce((acc, category) => acc + category.budget, 0);\r\n      } catch (error) {\r\n        return null;\r\n      }\r\n    })();\r\n\r\n    const parentCategoryTransactions = transactions.filter((transaction) =>\r\n      categories.find(\r\n        (category) => category.categoryId === transaction.categoryId\r\n      )\r\n    );\r\n\r\n    const spentParentCategory = parentCategoryTransactions.reduce(\r\n      (acc, transaction) => acc + transaction.amount,\r\n      0\r\n    );\r\n\r\n    const totalLeft = budgeted ? budgeted - spentParentCategory : null;\r\n    return totalLeft;\r\n  }, [categories, transactions, amount]);\r\n\r\n  const amountValue = useMemo(() => amount || categoryLeftValue, [\r\n    amount,\r\n    categoryLeftValue,\r\n  ]);\r\n\r\n  return (\r\n    <Root onClick={onClick}>\r\n      <span>{name}</span>\r\n      <CategoryAmount negative={amountValue < 0}>\r\n        {formatCurrency(amountValue)}\r\n      </CategoryAmount>\r\n    </Root>\r\n  );\r\n}\r\nexport default ParentCategory;\r\n","import React from \"react\";\r\n\r\nimport { CategoryItem as Root, CategoryAmount } from \"./BudgetCategoryList.css\";\r\nimport { formatCurrency } from \"utils\";\r\nfunction CategoryItem({ name, item, transactions }) {\r\n  const categoryTransactions = transactions.filter(\r\n    (transaction) => transaction.categoryId === item.id\r\n  );\r\n  const spentOnCategory = categoryTransactions.reduce(\r\n    (acc, transaction) => acc + transaction.amount,\r\n    0\r\n  );\r\n  const totalLeft = item.budget - spentOnCategory;\r\n  return (\r\n    <Root>\r\n      <span>{name}</span>\r\n      <CategoryAmount negative={totalLeft < 0}>\r\n        {formatCurrency(totalLeft.toFixed(2))}\r\n      </CategoryAmount>\r\n    </Root>\r\n  );\r\n}\r\nexport default CategoryItem;\r\n","import React, { useMemo, useRef, useCallback, useContext } from \"react\";\r\n\r\nimport \"styled-components/macro\";\r\nimport { groupBy } from \"lodash\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nimport API from \"data/fetch\";\r\n\r\nimport { ToggleableList } from \"components\";\r\nimport ParentCategory from \"./ParentCategory\";\r\nimport CategoryItem from \"./CategoryItem\";\r\n\r\nimport BudgetContext from \"data/context/budget.context\";\r\n\r\nfunction BudgetCategoryList() {\r\n  const { data: budget } = useQuery(\r\n    [\"budget\", { id: 1 }],\r\n    API.budget.fetchBudget\r\n  );\r\n  const { data: allCategories } = useQuery(\r\n    \"allCategories\",\r\n    API.common.fetchAllCategories\r\n  );\r\n  const { data: budgetedCategories } = useQuery(\r\n    [\"budgetedCategories\", { id: 1 }],\r\n    API.budget.fetchBudgetedCategories\r\n  );\r\n\r\n  const { dispatch } = useContext(BudgetContext.store);\r\n  const setSelectedParentCategoryId = useCallback(\r\n    (id) =>\r\n      dispatch({\r\n        type: \"selectedParentCategoryId\",\r\n        payload: id,\r\n      }),\r\n    [dispatch]\r\n  );\r\n\r\n  const { t } = useTranslation();\r\n  const handleClickParentCategoryRef = useRef(null);\r\n  const budgetedCategoriesByParent = useMemo(\r\n    () =>\r\n      groupBy(\r\n        budgetedCategories,\r\n        (item) =>\r\n          allCategories.find((category) => category.id === item.categoryId)\r\n            .parentCategory.name\r\n      ),\r\n    [budgetedCategories, allCategories]\r\n  );\r\n\r\n  const handleClearParentCategorySelect = useCallback(() => {\r\n    setSelectedParentCategoryId();\r\n    handleClickParentCategoryRef.current();\r\n  }, [setSelectedParentCategoryId, handleClickParentCategoryRef]);\r\n\r\n  const handleSelectRestParentCategories = useCallback(() => {\r\n    setSelectedParentCategoryId(null);\r\n    handleClickParentCategoryRef.current();\r\n  }, [setSelectedParentCategoryId, handleClickParentCategoryRef]);\r\n\r\n  const listItems = useMemo(\r\n    () =>\r\n      Object.entries(budgetedCategoriesByParent).map(\r\n        ([parentName, categories]) => ({\r\n          id: parentName,\r\n          Trigger: ({ onClick }) => (\r\n            <ParentCategory\r\n              name={parentName}\r\n              onClick={() => {\r\n                onClick(parentName);\r\n                setSelectedParentCategoryId(parentName);\r\n              }}\r\n              categories={categories}\r\n              transactions={budget.transactions}\r\n            />\r\n          ),\r\n          children: categories.map((budgetedCategory) => {\r\n            const { name } = allCategories.find(\r\n              (category) => category.id === budgetedCategory.categoryId\r\n            );\r\n            return (\r\n              <CategoryItem\r\n                key={budgetedCategory.id}\r\n                name={name}\r\n                item={budgetedCategory}\r\n                transactions={budget.transactions}\r\n              />\r\n            );\r\n          }),\r\n        })\r\n      ),\r\n    [\r\n      allCategories,\r\n      budget.transactions,\r\n      budgetedCategoriesByParent,\r\n      setSelectedParentCategoryId,\r\n    ]\r\n  );\r\n\r\n  const totalSpent = useMemo(\r\n    () =>\r\n      budget.transactions.reduce(\r\n        (acc, transaction) => acc + transaction.amount,\r\n        0\r\n      ),\r\n    [budget.transactions]\r\n  );\r\n\r\n  const restToSpent = useMemo(() => budget.totalAmount - totalSpent, [\r\n    budget.totalAmount,\r\n    totalSpent,\r\n  ]);\r\n  const amountTaken = useMemo(\r\n    () =>\r\n      budgetedCategories.reduce((acc, budgetedCategory) => {\r\n        const categoryTransactions = budget.transactions.filter(\r\n          (transaction) => transaction.categoryId === budgetedCategory.id\r\n        );\r\n\r\n        const categoryExpenses = categoryTransactions.reduce(\r\n          (acc, transaction) => acc + transaction.amount,\r\n          0\r\n        );\r\n\r\n        return acc + Math.max(categoryExpenses, budgetedCategory.budget);\r\n      }, 0),\r\n    [budget.transactions, budgetedCategories]\r\n  );\r\n\r\n  const notBudgetedTransaction = useMemo(\r\n    () =>\r\n      budget.transactions.filter(\r\n        (transaction) =>\r\n          !budgetedCategories.find(\r\n            (budgetedCategory) => budgetedCategory.id === transaction.categoryId\r\n          )\r\n      ),\r\n    [budget.transactions, budgetedCategories]\r\n  );\r\n  const notBudgetedExpenses = useMemo(\r\n    () =>\r\n      notBudgetedTransaction.reduce(\r\n        (acc, transaction) => acc + transaction.amount,\r\n        0\r\n      ),\r\n    [notBudgetedTransaction]\r\n  );\r\n  const availableForRestCategories = useMemo(\r\n    () => budget.totalAmount - amountTaken - notBudgetedExpenses,\r\n    [amountTaken, budget.totalAmount, notBudgetedExpenses]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        css={`\r\n          border-bottom: 5px solid ${({ theme }) => theme.colors.gray.light};\r\n        `}\r\n      >\r\n        <ParentCategory\r\n          name={budget.name}\r\n          amount={restToSpent}\r\n          onClick={handleClearParentCategorySelect}\r\n        />\r\n      </div>\r\n      <ToggleableList\r\n        items={listItems}\r\n        clickRef={handleClickParentCategoryRef}\r\n      />\r\n      <div\r\n        css={`\r\n          border-top: 5px solid ${({ theme }) => theme.colors.gray.light};\r\n        `}\r\n      >\r\n        <ParentCategory\r\n          name={t(\"Other Categories\")}\r\n          amount={availableForRestCategories}\r\n          onClick={handleSelectRestParentCategories}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BudgetCategoryList;\r\n"],"sourceRoot":""}